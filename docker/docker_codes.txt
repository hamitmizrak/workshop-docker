
docker --version
docker version
docker -v
docker info

--------------------------------
docker run hello-world
docker container run hello-world

--------------------------------
docker search nginx
docker pull nginx
docker pull nginx
docker pull mysql
docker pull httpd
docker pull alpine
docker pull ubuntu
docker pull centos
-----------------------------------------------------------------------------------------------
Alpine: Minimalist ve güvenli bir linux dağıtımıdır. 
Alpine Linux küçük boyutlu, hızlı ve güvenli bir işletim sistemi bizlere sunar
Alpine Özellikleri
1-) Küçük Boyut : Oldukça küçük boyutlu ve 5MB yer kaplar yani minumal oalrak gerekli olan en küçük boyuta sahiptir.
2-) Güvenli : kernal(Çekirdek) işletim sistemi çekirdek kısmını sürekli güncel tutart.
3-) Paket Yönetim : apk (Alpine Package Keeper) paket yönetim sistemi vardır. Apk paketleri yönetmek için hızlı ve basit bir yoldur.
4-) Konteyner desteği: Docker konteylerın imaj desteği vardır.
5-) Topluluk Desteğinin sağlanması.

-----------------------------------------------------------------------------------------------
YAML (YAML Ain't Markup  Language) yapılandırma dosyalarında sıklıkla kullanırız.
JSON, XML  bunlara alternatif olarak yml kullanırız.
Örneğin: docker-compose.yml , gitlab-ci.yml, application.yml
Veri serileştirmede, okunabilinirliği çok sade bir görüntüsü vardır.

1-) user friendly (İnsan dostu) : 
- insanların kolaylıkla okuyup anlaması demektir.

2-) Girintileme özelliği : Hiyerarşik yapıları temsil etmek için girintileme kullanılır.
NOT: Girintilemede iki veya dört boşlukla gösteririz.
  2 tane boşluk
  tab
  
3-) Veri Türleri (Data Type)
- Basit veri türlerine sahiptir. 
- string(dize)
- integer(tam sayı)
- float(ondalıklı sayılar)
- boolean(true, false)
- listeler (diziler)
- haritalar(map) eşleme: key-value

4-) Yorumlama
- # ile single comment yazarız.


-----------------------------------------------------------------------------------------------
docker search nginx
docker pull nginx
docker container run --publish 1111:80 nginx
docker container run --publish 2222:80 --name hamit nginx
docker container run --publish 3333:80 --name hamit2 --detach nginx
docker container run -p 4444:80 --name hamit3 -d nginx
docker container run -p 5555:80 --name hamit4 -d nginx:latest
docker container run -p 6666:80 --name hamit5 -d nginx:1.15

-----------------------------------------------------------------------------------------------
docker search nginx
docker pull nginx
docker container run -p 6666:80 --name hamit5 -d nginx
curl localhost:6666


-----------------------------------------------------------------------------------------------
# CONTAINER
docker container --help
docker ps 
docker container ls 
docker container prune (Çalışmayan bütün containerleri siler) 
docker container start containerNAME
docker container start containerID
docker container stop 254e87b1526a 8167898ab220 46c000ab5c26
docker container rm 254e87b1526a 8167898ab220 46c000ab5c26
docker container rm -f 254e87b1526a 8167898ab220 46c000ab5c26




#########
$ docker container --help
Usage:  docker container COMMAND
Manage containers
Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  inspect     Display detailed information on one or more containers
  kill        Kill one or more running containers
  logs        Fetch the logs of a container
  ls          List containers
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  prune       Remove all stopped containers
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  run         Run a command in a new container
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker container COMMAND --help' for more information on a command.

--------------------------------
# IMAGE 
docker image --help

--------------------------------
# TERMINAL 
docker container exec -it nginx  bash

--------------------------------
# VOLUME
docker volume --help


--------------------------------
# NETWORK
docker network --help